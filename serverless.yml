service: serverless-training
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    tableName: ${self:custom.tableName}
    bucketName: ${self:custom.bucketName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
        - dynamodb:*
        - ses:*
      Resource: "*"

plugins:
  - serverless-s3-sync
  - serverless-offline
  - serverless-webpack

package:
  individually: true

custom:
  tableName: player-points-v1
  bucketName: serverless-s3-bucket23
  s3Sync:
    - bucketName: ${self:custom.bucketName}
      localDir: Uploads

functions:
  getUser:
    handler: src/lambdas/users/handlers/getHandler/getUser.handler
    events:
      - http:
          path: getUser/{ID}
          method: GET
          cors: true
          private: true
  getPlayerScore:
    handler: src/lambdas/players/handlers/getHandler/getPlayerScore.handler
    events:
      - http:
          path: getPlayerScore/{ID}
          method: GET
          cors: true
  createPlayerScore:
    handler: src/lambdas/players/handlers/postHandler/createPlayerScore.handler
    events:
      - http:
          path: createPlayerScore/{ID}
          method: POST
          cors: true
  createFile:
    handler: src/lambdas/users/handlers/postHandler/createFile.handler
    events:
      - http:
          path: createFile/{fileName}
          method: POST
          cors: true
  getFile:
    handler: src/lambdas/users/handlers/getHandler/getFile.handler
    events:
      - http:
          path: getFile/{fileName}
          method: GET
          cors: true
  sendEmail:
    handler: src/lambdas/emails/handlers/postHandler/sendEmail.handler
    events:
      - http:
          path: sendEmail
          method: POST
          cors: true

resources:
  Resources:
    DemoBucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
